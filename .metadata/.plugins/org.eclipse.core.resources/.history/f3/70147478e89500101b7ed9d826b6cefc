package Doctor.dao;

import javax.swing.*;
import java.sql.*;

public class PatientDao {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/vaidhya_seva";
    private static final String USER = "root";
    private static final String PASS = "HAREKRISHNA";

    // Get database connection
    public Connection getCon() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(DB_URL, USER, PASS);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage());
            return null;
        }
    }

    // Main patient menu
    public void handlePatientOperations() {
        String[] options = {"Insert Patient", "View Patient", "Check Patient", "Delete Patient", "Back"};
        int choice;

        while (true) {
            choice = JOptionPane.showOptionDialog(
                    null,
                    "Choose an operation:",
                    "Patient Management",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    options,
                    options[0]);

            switch (choice) {
                case 0 -> insertPatient();
                case 1 -> viewPatient();
                case 2 -> checkPatient();
                case 3 -> deletePatient();
                case 4, JOptionPane.CLOSED_OPTION -> { return; }
                default -> JOptionPane.showMessageDialog(null, "Invalid choice. Please try again.");
            }
        }
    }

    // Insert a patient record
    private void insertPatient() {
        String patientId = JOptionPane.showInputDialog("Enter Patient ID:");
        String userId = JOptionPane.showInputDialog("Enter User ID:");
        String appointmentDate = JOptionPane.showInputDialog("Enter Appointment Date (YYYY-MM-DD):");
        String ailmentType = JOptionPane.showInputDialog("Enter Ailment Type:");
        String ailmentDetails = JOptionPane.showInputDialog("Enter Ailment Details:");
        String diagnosisHistory = JOptionPane.showInputDialog("Enter Diagnosis History:");

        String sql = """
                INSERT INTO patient (patientID, userID, appointment_date, ailment_type, ailment_details, diagnosis_history)
                VALUES (?, ?, ?, ?, ?, ?)
                """;

        try (Connection con = getCon();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, patientId);
            ps.setString(2, userId);
            ps.setString(3, appointmentDate);
            ps.setString(4, ailmentType);
            ps.setString(5, ailmentDetails);
            ps.setString(6, diagnosisHistory);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Patient inserted successfully.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Insert Error: " + e.getMessage());
        }
    }

    // View patient details
    private void viewPatient() {
        String patientId = JOptionPane.showInputDialog("Enter Patient ID to view details:");
        if (patientId == null || patientId.trim().isEmpty()) return;

        String sql = "SELECT * FROM patient WHERE patientID = ?";

        try (Connection con = getCon();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, patientId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    StringBuilder patientDetails = new StringBuilder();
                    patientDetails.append("Patient ID: ").append(rs.getString("patientID")).append("\n");
                    patientDetails.append("User ID: ").append(rs.getString("userID")).append("\n");
                    patientDetails.append("Appointment Date: ").append(rs.getString("appointment_date")).append("\n");
                    patientDetails.append("Ailment Type: ").append(rs.getString("ailment_type")).append("\n");
                    patientDetails.append("Ailment Details: ").append(rs.getString("ailment_details")).append("\n");
                    patientDetails.append("Diagnosis History: ").append(rs.getString("diagnosis_history")).append("\n");

                    JOptionPane.showMessageDialog(null, patientDetails.toString(), "Patient Details", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "No patient found with ID: " + patientId, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
        }
    }

    // Check if patient exists
    private void checkPatient() {
        String patientId = JOptionPane.showInputDialog("Enter Patient ID to check:");
        if (patientId == null || patientId.trim().isEmpty()) return;

        String sql = "SELECT patientID FROM patient WHERE patientID = ?";

        try (Connection con = getCon();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, patientId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Patient ID " + patientId + " exists in the system.");
                } else {
                    JOptionPane.showMessageDialog(null, "Patient ID " + patientId + " not found.");
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Check Error: " + e.getMessage());
        }
    }

    // Delete a patient record
    private void deletePatient() {
        String patientId = JOptionPane.showInputDialog("Enter Patient ID to delete:");
        if (patientId == null || patientId.trim().isEmpty()) return;

        String sql = "DELETE FROM patient WHERE patientID = ?";

        try (Connection con = getCon();
             PreparedStatement ps = con.prepareStatement(sql)) {

            ps.setString(1, patientId);
            int rows = ps.executeUpdate();

            if (rows > 0) {
                JOptionPane.showMessageDialog(null, "Patient record deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(null, "No patient found with ID: " + patientId);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Delete Error: " + e.getMessage());
        }
    }
}
