package Doctor.dao;

import Doctor.bean.PatientBean;
import javax.swing.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;

public class PatientDao {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/vaidhya_seva";
    private static final String USER = "root";
    private static final String PASS = "HAREKRISHNA";

    public Connection getCon() {
        Connection con = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage());
            e.printStackTrace();
        }
        return con;
    }

    public void handlePatientOperations() {
        String[] options = {"Insert Patient", "View Patient", "Check Patient", "Delete Patient", "Back"};
        int choice;

        while (true) {
            choice = JOptionPane.showOptionDialog(
                    null,
                    "Choose an operation:",
                    "Patient Management",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    options,
                    options[0]);

            switch (choice) {
                case 0:
                    insertPatient();
                    break;
                case 1:
                    viewPatient();
                    break;
                case 2:
                    checkPatient();
                    break;
                case 3:
                    deletePatient();
                    break;
                case 4:
                case JOptionPane.CLOSED_OPTION:
                    return;
                default:
                    JOptionPane.showMessageDialog(null, "Invalid choice. Please try again.");
            }
        }
    }

    private void insertPatient() {
        // ... (Code for inserting patient)
        // Make sure to use PreparedStatement here as well
    }

    private void viewPatient() {
        String patientId = JOptionPane.showInputDialog("Enter Patient ID to view details:");
        if (patientId == null || patientId.trim().isEmpty()) {
            return;
        }

        String sql = "SELECT * FROM patient WHERE patientID = ?";
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;

        try {
            con = getCon();
            if (con == null) return;

            ps = con.prepareStatement(sql);
            ps.setString(1, patientId);
            rs = ps.executeQuery();

            if (rs.next()) {
                StringBuilder patientDetails = new StringBuilder();
                patientDetails.append("Patient ID: ").append(rs.getString("patientID")).append("\n");
                patientDetails.append("User ID: ").append(rs.getString("userID")).append("\n");
                // ... add all other fields
                JOptionPane.showMessageDialog(null, patientDetails.toString(), "Patient Details", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No patient found with ID: " + patientId, "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
            e.printStackTrace();
        } finally {
            closeResources(con, ps, rs);
        }
    }

    private void checkPatient() {
        // ... (Code for checking patient)
    }

    private void deletePatient() {
        // ... (Code for deleting patient)
    }

    private void closeResources(Connection con, PreparedStatement ps, ResultSet rs) {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}